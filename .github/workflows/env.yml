name: Env variables
on: push
env: # all variables here are accessible by all the jobs
  WF_ENV: ${{ secrets.WF_ENV}}
jobs:
  create-issue:
    runs-on: ubuntu-latest 
    permissions:
      issues: write 
    steps:
      - name: push random file
        run: |
          pwd
          ls -a 
          git init 
          git remote add origin "https://$GITHUB_ACTOR:${{secrets.GITHUB_TOKEN}}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "my-bot@bot.com"
          git config --global user.name "my-bot"
          git fetch 
          git checkout master
          git branch --set-upstream-to=origin/master
          git pull
          ls -a 
          echo $RANDOM >> random.txt
          ls -a 
          git add . 
          git commit -m "testing adding file from the VM"
          git push https://$GITHUB_ACTOR:${{secrets.GITHUB_TOKEN}}@github.com/$GITHUB_REPOSITORY.git       
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
  # log-env:
  #   runs-on: ubuntu-latest
  #   env:
  #     Job_ENV: available to all steps ONLY in this job
  #   steps:
  #     - name: Log env variable
  #       env:
  #         STEP_ENV: available  to ONLY  this step
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}" # yes
  #         echo "Job_ENV: ${Job_ENV}" # yes
  #         echo "STEP_ENV: ${STEP_ENV}" # yes
  #     - name: Test env in other step
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}"  #yes
  #         echo "Job_ENV: ${Job_ENV}"  #yes
  #         echo "STEP_ENV: ${STEP_ENV}" #no
  # log-env-2:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Log env variable 2
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}" # only this var because its available for all jobs in this workflow
  #         echo "Job_ENV: ${Job_ENV}" # no
  #         echo "STEP_ENV: ${STEP_ENV}" # no
          
  
  